// Generated by CoffeeScript 1.7.1
(function() {
  var OAuth2, apiKeys, config, createNewAuth, google;

  config = require("../config").data();

  google = require("googleapis");

  OAuth2 = google.auth.OAuth2;

  apiKeys = require("../secrets/api-keys");

  createNewAuth = function() {
    var callbackUrl;
    callbackUrl = "http://virtualwalker-chrisballard.c9.io/oauth2callback";
    return new OAuth2(apiKeys.googleClientId, apiKeys.googleClientSecret, callbackUrl);
  };

  this.startAuthorisation = function(req, res) {
    var oauth2Client, url;
    if (!(config.skipGoogleAuth || (req.session.oauth2Client != null))) {
      oauth2Client = createNewAuth();
      url = oauth2Client.generateAuthUrl({
        access_type: "online",
        scope: "https://www.googleapis.com/auth/blogger"
      });
      console.log("Start auth. Redirect to: " + url);
      return res.redirect(url);
    } else {
      return res.redirect("/home");
    }
  };

  this.completeAuthorisation = function(req, res, code, done) {
    var oauth2Client;
    oauth2Client = createNewAuth();
    oauth2Client.getToken(code, function(err, tokens) {
      if (err == null) {
        oauth2Client.setCredentials(tokens);
        req.session.oauth2Client = oauth2Client;
        return console.log("Got " + tokens.length + " tokens");
      } else {
        return console.log("Failed to authorise: " + err);
      }
    });
    done();
    return null;
  };

  this.init = function(app) {
    app.get("/oauth2callback", function(req, res) {
      var code;
      code = req.query.code;
      console.log("Auth callback. Got code: " + code);
      return googleApi.completeAuthorisation(req, res, code, (function(_this) {
        return function() {
          return res.redirect("/home");
        };
      })(this));
    });
    return app.post("/postToBlog", function(req, res) {
      var blogger, content, title, x;
      title = req.body.title;
      content = req.body.content;
      blogger = google.blogger({
        version: 'v3'
      });
      options({
        blogId: 'thevirtualwalker.blogspot.com',
        resource: {
          blogId: 'thevirtualwalker.blogspot.com'
        }
      });
      return x = blogger.blogs.get(options, function(err, body, res) {
        var test;
        return test = err;
      });
    });
  };

}).call(this);
